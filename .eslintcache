[{"D:\\Professionals\\Web Development\\Professory\\Web Solution\\New\\src\\Components\\SubComponents\\Shared\\HelpfullRating.jsx":"1","D:\\Professionals\\Web Development\\Professory\\Web Solution\\New\\src\\Components\\Api\\GetData.js":"2","D:\\Professionals\\Web Development\\Professory\\Web Solution\\New\\src\\Components\\Api\\PostData.js":"3"},{"size":8991,"mtime":1639029454608,"results":"4","hashOfConfig":"5"},{"size":5224,"mtime":1639029684509,"results":"6","hashOfConfig":"5"},{"size":7858,"mtime":1639032027241,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"pej699",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"D:\\Professionals\\Web Development\\Professory\\Web Solution\\New\\src\\Components\\SubComponents\\Shared\\HelpfullRating.jsx",["15","16","17","18","19","20","21","22"],"D:\\Professionals\\Web Development\\Professory\\Web Solution\\New\\src\\Components\\Api\\GetData.js",[],"D:\\Professionals\\Web Development\\Professory\\Web Solution\\New\\src\\Components\\Api\\PostData.js",["23"],"import axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nclass PostData {\r\n<<<<<<< HEAD\r\n    constructor() {\r\n        this.result = [];\r\n    }\r\n    BookAdd = (data, mthd) => {\r\n      const res = async () => {\r\n        const resp = await axios\r\n          .post(\"user/BookStore/add\", data)\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n        this.result = resp;\r\n        console.log(resp);\r\n        return resp;\r\n      };\r\n      return res();\r\n    };\r\n    ServiceAdd = (data, mthd) => {\r\n      const res = async () => {\r\n        const resp = await axios\r\n          .post(\"user/ServiceProvider/add\", data)\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n        this.result = resp;\r\n        console.log(resp);\r\n        return resp;\r\n      };\r\n      return res();\r\n    };\r\n    RattingAdd = (data, mthd) => {\r\n      const res = async () => {\r\n        const resp = await axios\r\n          .post(\"professors/comments/addComment\", {\r\n            subjectID: JSON.stringify(data.subjectID),\r\n            profID: data.profID,\r\n            year: data.year,\r\n            grade: data.name,\r\n            rating: 1,\r\n            hardness: data.hardRating,\r\n            exams: data.ExamForm,\r\n            project: data.Project,\r\n            homework: data.Homework,\r\n            attendence: data.Attandance,\r\n            curve: data.curve,\r\n            again: data.again,\r\n            style: data.TeachingStyle,\r\n            comment: data.Description,\r\n            tags: data.selectedTags,\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n        this.result = resp;\r\n        console.log(resp);\r\n        return resp;\r\n      };\r\n      return res();\r\n    };\r\n    SubjectRattingAdd = (data, mthd) => {\r\n      const res = async () => {\r\n        const resp = await axios\r\n          .post(\"subjects/addComment\", {\r\n            subjectID: data.subjectID,\r\n            year: data.year,\r\n            grade: data.name,\r\n            rating: data.rating,\r\n            hardness: data.hardRating,\r\n            exams: data.ExamForm,\r\n            project: data.Project,\r\n            homework: data.Homework,\r\n            again: data.again,\r\n            comment: data.Description,\r\n            tags: data.selectedTags,\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n        this.result = resp;\r\n        console.log(resp);\r\n        return resp;\r\n      };\r\n      return res();\r\n    };\r\n    LikeComment = (data, mthd) => {\r\n        const res = async () => {\r\n            const resp = await axios.post('professors/comments/like', {\r\n                commentID:data\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n            this.result = resp;\r\n            console.log(resp)\r\n            return resp;\r\n\r\n        }\r\n        return res();\r\n    }\r\n\r\n    UnLikeComment = (data, mthd) => {\r\n        const res = async () => {\r\n            const resp = await axios.post('professors/comments/dislike', {\r\n                commentID:data\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n            this.result = resp;\r\n            console.log(resp)\r\n            return resp;\r\n\r\n        }\r\n        return res();\r\n    }\r\n    \r\n    BlockComment = (data, mthd) => {\r\n        const res = async () => {\r\n            const resp = await axios.post('professors/comments/report', {\r\n                commentID:data\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n            this.result = resp;\r\n            console.log(resp)\r\n            return resp;\r\n\r\n        }\r\n        return res();\r\n    }\r\n\r\n    AddProf = (data, mthd) => {\r\n        const res = async () => {\r\n            const resp = await axios.post('professors/submit', {\r\n                majorID:JSON.stringify(data.majorID),\r\n                arName:data.nameAr,\r\n                name:data.profName\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n            this.result = resp;\r\n            console.log(resp)\r\n            return resp;\r\n\r\n        }\r\n        return res();\r\n    }\r\n    \r\n\r\n=======\r\n  constructor() {\r\n    this.result = [];\r\n  }\r\n  BookAdd = (data, mthd) => {\r\n    const res = async () => {\r\n      const resp = await axios\r\n        .post(\"user/BookStore/add\", data)\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      this.result = resp;\r\n      console.log(resp);\r\n      return resp;\r\n    };\r\n    return res();\r\n  };\r\n\r\n  ServiceAdd = (data, mthd) => {\r\n    const res = async () => {\r\n      const resp = await axios\r\n        .post(\"user/ServiceProvider/add\", data)\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      this.result = resp;\r\n      console.log(resp);\r\n      return resp;\r\n    };\r\n    return res();\r\n  };\r\n  RattingAdd = (data, mthd) => {\r\n    const res = async () => {\r\n      const resp = await axios\r\n        .post(\"professors/comments/addComment\", {\r\n          subjectID: JSON.stringify(data.subjectID),\r\n          profID: data.profID,\r\n          year: data.year,\r\n          grade: data.name,\r\n          rating: 1,\r\n          hardness: data.hardRating,\r\n          exams: data.ExamForm,\r\n          project: data.Project,\r\n          homework: data.Homework,\r\n          attendence: data.Attandance,\r\n          curve: data.curve,\r\n          again: data.again,\r\n          style: data.TeachingStyle,\r\n          comment: data.Description,\r\n          tags: data.selectedTags,\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      this.result = resp;\r\n      console.log(resp);\r\n      return resp;\r\n    };\r\n    return res();\r\n  };\r\n  SubjectRattingAdd = (data, mthd) => {\r\n    const res = async () => {\r\n      const resp = await axios\r\n        .post(\"subjects/addComment\", {\r\n          subjectID: data.subjectID,\r\n          year: data.year,\r\n          grade: data.name,\r\n          rating: data.rating,\r\n          hardness: data.hardRating,\r\n          exams: data.ExamForm,\r\n          project: data.Project,\r\n          homework: data.Homework,\r\n          again: data.again,\r\n          comment: data.Description,\r\n          tags: data.selectedTags,\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      this.result = resp;\r\n      console.log(resp);\r\n      return resp;\r\n    };\r\n    return res();\r\n  };\r\n  LikeComment = (data, mthd) => {\r\n    const res = async () => {\r\n      const resp = await axios\r\n        .post(\"professors/comments/like\", {\r\n          commentID: data,\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      this.result = resp;\r\n      console.log(resp);\r\n      return resp;\r\n    };\r\n    return res();\r\n  };\r\n  UnLikeComment = (data, mthd) => {\r\n    const res = async () => {\r\n      const resp = await axios\r\n        .post(\"professors/comments/dislike\", {\r\n          commentID: data,\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      this.result = resp;\r\n      console.log(resp);\r\n      return resp;\r\n    };\r\n    return res();\r\n  };\r\n  BlockComment = (data, mthd) => {\r\n    const res = async () => {\r\n      const resp = await axios\r\n        .post(\"professors/comments/report\", {\r\n          commentID: data,\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      this.result = resp;\r\n      console.log(resp);\r\n      return resp;\r\n    };\r\n    return res();\r\n  };\r\n>>>>>>> 88dc1794e2370b41317ef0afd09249b6a8562753\r\n}\r\nexport default new PostData();\r\n",{"ruleId":"24","severity":1,"message":"25","line":46,"column":23,"nodeType":"26","messageId":"27","endLine":46,"endColumn":25},{"ruleId":"24","severity":1,"message":"25","line":48,"column":13,"nodeType":"26","messageId":"27","endLine":48,"endColumn":15},{"ruleId":"24","severity":1,"message":"25","line":55,"column":23,"nodeType":"26","messageId":"27","endLine":55,"endColumn":25},{"ruleId":"24","severity":1,"message":"25","line":57,"column":20,"nodeType":"26","messageId":"27","endLine":57,"endColumn":22},{"ruleId":"24","severity":1,"message":"25","line":64,"column":23,"nodeType":"26","messageId":"27","endLine":64,"endColumn":25},{"ruleId":"24","severity":1,"message":"25","line":66,"column":18,"nodeType":"26","messageId":"27","endLine":66,"endColumn":20},{"ruleId":"28","severity":1,"message":"29","line":72,"column":6,"nodeType":"30","endLine":72,"endColumn":8,"suggestions":"31"},{"ruleId":"32","severity":1,"message":"33","line":142,"column":9,"nodeType":"34","messageId":"35","endLine":142,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"36","line":5,"column":1},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'FormData', 'alreadyBlock', 'alreadyDisLiked', 'alreadyLiked', 'canBlock', 'canDisLike', and 'canLike'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(F => ...)' if you only need 'FormData' in the 'setFormData' call.","ArrayExpression",["37"],"no-unused-vars","'replyed' is assigned a value but never used.","Identifier","unusedVar","Parsing error: Unexpected token\n\n  3 | \n  4 | class PostData {\n> 5 | <<<<<<< HEAD\n    | ^\n  6 |     constructor() {\n  7 |         this.result = [];\n  8 |     }",{"desc":"38","fix":"39"},"Update the dependencies array to be: [FormData, alreadyBlock, alreadyDisLiked, alreadyLiked, canBlock, canDisLike, canLike]",{"range":"40","text":"41"},[1979,1981],"[FormData, alreadyBlock, alreadyDisLiked, alreadyLiked, canBlock, canDisLike, canLike]"]